
apiVersion: v1
kind: ConfigMap
metadata:
  name: broker-config
data:
  # Tune for available memory. Increase the heap up to 24G to have
  # better GC behavior at high throughput
  PULSAR_MEM: "\" -Xms1g -Xmx1g -XX:MaxDirectMemorySize=1g\""
  zookeeperServers: zookeeper
  globalZookeeperServers: zookeeper
  clusterName: kubernetes
---


##
## Broker deployment definition
##
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: broker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: pulsar
        component: broker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: broker
          image: streamlio/streamlio:0.1
          args: ["broker"]
          #command: ["sh", "-c"]
          #args:
          #  - >
          #    /opt/streamlio/scripts/apply-config-from-env.py /opt/streamlio/pulsar/conf/broker.conf &&
          #    /opt/streamlio/scripts/apply-config-from-env.py /opt/streamlio/pulsar/conf/pulsar_env.sh &&
          #    /opt/streamlio/pulsar/bin/pulsar broker
          ports:
            - containerPort: 8080
              # hostPort: 8080
            - containerPort: 6650
              # hostPort: 6650
          envFrom:
            - configMapRef:
                name: broker-config
          env:
           - name: advertisedAddress
             valueFrom:
                fieldRef:
                  fieldPath: status.podIP
---

##
## Define the Bookie headless service
## In practice, in this case, it is only useful to have a view of
## all the broker pods that are present
##
apiVersion: v1
kind: Service
metadata:
  name: broker
  labels:
    app: pulsar
    component: broker
spec:
  ports:
    - port: 8080
      name: http
    - port: 6650
      name: pulsar
  clusterIP: None
  selector:
    app: pulsar
    component: broker
---

###

apiVersion: v1
kind: Pod
metadata:
    name: pulsar-admin
spec:
    containers:
      - name: pulsar-admin
        image: streamlio/streamlio:0.1
        command: ["sh", "-c"]
        args:
          - >
            /opt/streamlio/scripts/apply-config-from-env.py /opt/streamlio/pulsar/conf/client.conf &&
            sleep 10000000000
        envFrom:
          - configMapRef:
              name: broker-config
        env:
          - name: webServiceUrl
            value: http://broker:8080/
          - name: brokerServiceUrl
            value: pulsar://broker:6650/

